install.packages(c("UsingR", "dplyr", "reshape2", "ggvis", "lubridate"))
# sums of squares of x's
source('C:/GitHub/Coursera/Regression_Learn/code_snippets.R')
fit <- lm(y~x)
summary(fit)
source('C:/GitHub/Coursera/Regression_Learn/code_snippets.R')
data("mtcars")
fit <- lm(mpg~wt)
fit <- lm(mpg~wt, mtcars)
summary(fit)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
-4.202635 * 3
-4.202635 * 3 + sumCoef[1,1]
(-4.202635 * 3) + sumCoef[1,1]
sumCoef[1,1]
p <- ggplot(mtcars, aes(x=wt, y=mpg)) + geom_smooth(method="lm")
library(ggplot2)
p <- ggplot(mtcars, aes(x=wt, y=mpg)) + geom_smooth(method="lm")
p
source('C:/GitHub/Coursera/Regression_Learn/code_snippets.R')
m <- beta0 + beta1 * 3000
m <- beta0 + beta1 * 3
(sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2])/2
(sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2])*2
summary(fit)
str(summary(fit))
source('C:/GitHub/Coursera/Regression_Learn/code_snippets.R')
str(summary(fit))
summary(fit)
data("mtcars")
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef
mean(wt)
mean(mtcars$wt)
mean(mtcars$wt) - 9.559101
mean(mtcars$wt) - 0.559101
summary(fit)
fit <- lm(mpg ~ mean(wt), mtcars)
fit <- lm(mpg ~ wt, mtcars)
?predict
source('C:/GitHub/Coursera/Regression_Learn/code_snippets.R')
predict(fit, mean(wt), interval = "confidence", level=0.95)
predict(fit, mean(mtcars$wt), interval = "confidence", level=0.95)
mean(mtcars$wt)
predict(fit, 3.21725, interval = "confidence", level=0.95)
predict(fit, interval = "confidence", level=0.95)
summary(fit)
predict(fit, 3, interval = "confidence", level=0.95)
predict(fit, mean(x), interval = "confidence", level=0.95)
newdata <- data.frame(wt=mean(x))
predict(fit, newdata, interval = "confidence", level=0.95)
predict(fit, newdata, interval = "predict", level=0.95)
predict(fit, interval = "predict", level=0.95)
predict(fit, mean(x), interval = "predict", level=0.95)
attach(faithful)
str(faithful)
f_fit <- lm(eruptions~waiting)
newdata <- data.frame(waiting=80)
predict(f_fit, newdata, interval="predict")
newdata <- data.frame(wt=3)
predict(fit, newdata, interval = "predict", level=0.95)
summary(mtcars)
str(mtcars)
str(faithful)
predict(fit, newdata, interval = "predict")
source('C:/GitHub/Coursera/Regression_Learn/predict_test.R')
fit <- lm(mtcars$mpg)
fit <- lm(mtcars$mpg~mtcars$wt)
newdata <- data.frame(mtcars$wt=3000)
newdata <- data.frame(wt=3000)
predict(fit, newdata, interval="predict")
predict(fit, newdata, interval="confidence")
predict(fit, newdata, interval="predict", weights=1)
newdata <- data.frame(x=3000)
newdata <- data.frame(x=3)
predict(fit, newdata, interval="predict")
source('C:/GitHub/Coursera/Regression_Learn/test.R')
View(nm)
source('C:/GitHub/Coursera/Regression_Learn/test.R')
str(c_fit)
c_fit
summary(c_fit)
0.7528/18776
source('C:/GitHub/Coursera/Regression_Learn/test.R')
